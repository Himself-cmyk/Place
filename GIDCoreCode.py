lq_60_di = {
    36: {'兄弟地': '兄弟临官', '妻财地': '妻财临官', '官鬼地': '官鬼长生', '父母地': '父母绝地', '子孙地': '子孙病地'},
    37: {'兄弟地': '兄弟帝旺', '妻财地': '妻财帝旺', '官鬼地': '官鬼沐浴', '父母地': '父母胎地', '子孙地': '子孙死地'},
    14: {'兄弟地': '兄弟衰地', '妻财地': '妻财衰地', '官鬼地': '官鬼冠带', '父母地': '父母养地', '子孙地': '子孙墓库'},
    51: {'兄弟地': '兄弟病地', '妻财地': '妻财病地', '官鬼地': '官鬼临官', '父母地': '父母长生', '子孙地': '子孙绝地'},
    52: {'兄弟地': '兄弟死地', '妻财地': '妻财死地', '官鬼地': '官鬼帝旺', '父母地': '父母沐浴', '子孙地': '子孙胎地'},
    17: {'兄弟地': '', '妻财地': '妻财墓库', '官鬼地': '官鬼衰地', '父母地': '父母冠带', '子孙地': '子孙养地'},
    6: {'兄弟地': '兄弟绝地', '妻财地': '妻财绝地', '官鬼地': '官鬼病地', '父母地': '父母临官', '子孙地': '子孙长生'},
    7: {'兄弟地': '兄弟胎地', '妻财地': '妻财胎地', '官鬼地': '官鬼死地', '父母地': '父母帝旺', '子孙地': '子孙沐浴'},
    20: {'兄弟地': '兄弟养地', '妻财地': '妻财养地', '官鬼地': '官鬼墓库', '父母地': '父母衰地', '子孙地': '子孙冠带'},
    33: {'兄弟地': '兄弟长生', '妻财地': '妻财长生', '官鬼地': '官鬼绝地', '父母地': '父母病地', '子孙地': '子孙临官'},
    34: {'兄弟地': '兄弟沐浴', '妻财地': '妻财沐浴', '官鬼地': '官鬼胎地', '父母地': '父母死地', '子孙地': '子孙帝旺'},
    23: {'兄弟地': '兄弟冠带', '妻财地': '妻财冠带', '官鬼地': '官鬼养地', '父母地': '父母墓库', '子孙地': '子孙衰地'},
    12: {'官鬼地': '官鬼临官', '兄弟地': '兄弟临官', '子孙地': '子孙长生', '妻财地': '妻财绝地', '父母地': '父母病地'},
    13: {'官鬼地': '官鬼帝旺', '兄弟地': '兄弟帝旺', '子孙地': '子孙沐浴', '妻财地': '妻财胎地', '父母地': '父母死地'},
    50: {'官鬼地': '官鬼衰地', '兄弟地': '兄弟衰地', '子孙地': '子孙冠带', '妻财地': '妻财养地', '父母地': '父母墓库'},
    27: {'官鬼地': '官鬼病地', '兄弟地': '兄弟病地', '子孙地': '子孙临官', '妻财地': '妻财长生', '父母地': '父母绝地'},
    28: {'官鬼地': '官鬼死地', '兄弟地': '兄弟死地', '子孙地': '子孙帝旺', '妻财地': '妻财沐浴', '父母地': '父母胎地'},
    53: {'官鬼地': '', '兄弟地': '兄弟墓库', '子孙地': '子孙衰地', '妻财地': '妻财冠带', '父母地': '父母养地'},
    42: {'官鬼地': '官鬼绝地', '兄弟地': '兄弟绝地', '子孙地': '子孙病地', '妻财地': '妻财临官', '父母地': '父母长生'},
    43: {'官鬼地': '官鬼胎地', '兄弟地': '兄弟胎地', '子孙地': '子孙死地', '妻财地': '妻财帝旺', '父母地': '父母沐浴'},
    56: {'官鬼地': '官鬼养地', '兄弟地': '兄弟养地', '子孙地': '子孙墓库', '妻财地': '妻财衰地', '父母地': '父母冠带'},
    9: {'官鬼地': '官鬼长生', '兄弟地': '兄弟长生', '子孙地': '子孙绝地', '妻财地': '妻财病地', '父母地': '父母临官'},
    10: {'官鬼地': '官鬼沐浴', '兄弟地': '兄弟沐浴', '子孙地': '子孙胎地', '妻财地': '妻财死地', '父母地': '父母帝旺'},
    59: {'官鬼地': '官鬼冠带', '兄弟地': '兄弟冠带', '子孙地': '子孙养地', '妻财地': '妻财墓库', '父母地': '父母衰地'},
    48: {'子孙地': '子孙临官', '官鬼地': '官鬼临官', '父母地': '父母长生', '兄弟地': '兄弟绝地', '妻财地': '妻财病地'},
    49: {'子孙地': '子孙帝旺', '官鬼地': '官鬼帝旺', '父母地': '父母沐浴', '兄弟地': '兄弟胎地', '妻财地': '妻财死地'},
    26: {'子孙地': '子孙衰地', '官鬼地': '官鬼衰地', '父母地': '父母冠带', '兄弟地': '兄弟养地', '妻财地': '妻财墓库'},
    3: {'子孙地': '子孙病地', '官鬼地': '官鬼病地', '父母地': '父母临官', '兄弟地': '兄弟长生', '妻财地': '妻财绝地'},
    4: {'子孙地': '子孙死地', '官鬼地': '官鬼死地', '父母地': '父母帝旺', '兄弟地': '兄弟沐浴', '妻财地': '妻财胎地'},
    29: {'子孙地': '', '官鬼地': '官鬼墓库', '父母地': '父母衰地', '兄弟地': '兄弟冠带', '妻财地': '妻财养地'},
    18: {'子孙地': '子孙绝地', '官鬼地': '官鬼绝地', '父母地': '父母病地', '兄弟地': '兄弟临官', '妻财地': '妻财长生'},
    19: {'子孙地': '子孙胎地', '官鬼地': '官鬼胎地', '父母地': '父母死地', '兄弟地': '兄弟帝旺', '妻财地': '妻财沐浴'},
    32: {'子孙地': '子孙养地', '官鬼地': '官鬼养地', '父母地': '父母墓库', '兄弟地': '兄弟衰地', '妻财地': '妻财冠带'},
    45: {'子孙地': '子孙长生', '官鬼地': '官鬼长生', '父母地': '父母绝地', '兄弟地': '兄弟病地', '妻财地': '妻财临官'},
    46: {'子孙地': '子孙沐浴', '官鬼地': '官鬼沐浴', '父母地': '父母胎地', '兄弟地': '兄弟死地', '妻财地': '妻财帝旺'},
    35: {'子孙地': '子孙冠带', '官鬼地': '官鬼冠带', '父母地': '父母养地', '兄弟地': '兄弟墓库', '妻财地': '妻财衰地'},
    0: {'妻财地': '妻财临官', '父母地': '父母临官', '兄弟地': '兄弟长生', '子孙地': '子孙绝地', '官鬼地': '官鬼病地'},
    1: {'妻财地': '妻财帝旺', '父母地': '父母帝旺', '兄弟地': '兄弟沐浴', '子孙地': '子孙胎地', '官鬼地': '官鬼死地'},
    38: {'妻财地': '妻财衰地', '父母地': '父母衰地', '兄弟地': '兄弟冠带', '子孙地': '子孙养地', '官鬼地': '官鬼墓库'},
    15: {'妻财地': '妻财病地', '父母地': '父母病地', '兄弟地': '兄弟临官', '子孙地': '子孙长生', '官鬼地': '官鬼绝地'},
    16: {'妻财地': '妻财死地', '父母地': '父母死地', '兄弟地': '兄弟帝旺', '子孙地': '子孙沐浴', '官鬼地': '官鬼胎地'},
    41: {'妻财地': '', '父母地': '父母墓库', '兄弟地': '兄弟衰地', '子孙地': '子孙冠带', '官鬼地': '官鬼养地'},
    30: {'妻财地': '妻财绝地', '父母地': '父母绝地', '兄弟地': '兄弟病地', '子孙地': '子孙临官', '官鬼地': '官鬼长生'},
    31: {'妻财地': '妻财胎地', '父母地': '父母胎地', '兄弟地': '兄弟死地', '子孙地': '子孙帝旺', '官鬼地': '官鬼沐浴'},
    44: {'妻财地': '妻财养地', '父母地': '父母养地', '兄弟地': '兄弟墓库', '子孙地': '子孙衰地', '官鬼地': '官鬼冠带'},
    57: {'妻财地': '妻财长生', '父母地': '父母长生', '兄弟地': '兄弟绝地', '子孙地': '子孙病地', '官鬼地': '官鬼临官'},
    58: {'妻财地': '妻财沐浴', '父母地': '父母沐浴', '兄弟地': '兄弟胎地', '子孙地': '子孙死地', '官鬼地': '官鬼帝旺'},
    47: {'妻财地': '妻财冠带', '父母地': '父母冠带', '兄弟地': '兄弟养地', '子孙地': '子孙墓库', '官鬼地': '官鬼衰地'},
    24: {'父母地': '父母临官', '子孙地': '子孙临官', '妻财地': '妻财长生', '官鬼地': '官鬼绝地', '兄弟地': '兄弟病地'},
    25: {'父母地': '父母帝旺', '子孙地': '子孙帝旺', '妻财地': '妻财沐浴', '官鬼地': '官鬼胎地', '兄弟地': '兄弟死地'},
    2: {'父母地': '父母衰地', '子孙地': '子孙衰地', '妻财地': '妻财冠带', '官鬼地': '官鬼养地', '兄弟地': '兄弟墓库'},
    39: {'父母地': '父母病地', '子孙地': '子孙病地', '妻财地': '妻财临官', '官鬼地': '官鬼长生', '兄弟地': '兄弟绝地'},
    40: {'父母地': '父母死地', '子孙地': '子孙死地', '妻财地': '妻财帝旺', '官鬼地': '官鬼沐浴', '兄弟地': '兄弟胎地'},
    5: {'父母地': '', '子孙地': '子孙墓库', '妻财地': '妻财衰地', '官鬼地': '官鬼冠带', '兄弟地': '兄弟养地'},
    54: {'父母地': '父母绝地', '子孙地': '子孙绝地', '妻财地': '妻财病地', '官鬼地': '官鬼临官', '兄弟地': '兄弟长生'},
    55: {'父母地': '父母胎地', '子孙地': '子孙胎地', '妻财地': '妻财死地', '官鬼地': '官鬼帝旺', '兄弟地': '兄弟沐浴'},
    8: {'父母地': '父母养地', '子孙地': '子孙养地', '妻财地': '妻财墓库', '官鬼地': '官鬼衰地', '兄弟地': '兄弟冠带'},
    21: {'父母地': '父母长生', '子孙地': '子孙长生', '妻财地': '妻财绝地', '官鬼地': '官鬼病地', '兄弟地': '兄弟临官'},
    22: {'父母地': '父母沐浴', '子孙地': '子孙沐浴', '妻财地': '妻财胎地', '官鬼地': '官鬼死地', '兄弟地': '兄弟帝旺'},
    11: {'父母地': '父母冠带', '子孙地': '子孙冠带', '妻财地': '妻财养地', '官鬼地': '官鬼墓库', '兄弟地': '兄弟衰地'}}
Liuqin_Num60 = [[36, 37, 14, 51, 52, 17, 6, 7, 20, 33, 34, 23], [12, 13, 50, 27, 28, 53, 42, 43, 56, 9, 10, 59],
                [48, 49, 26, 3, 4, 29, 18, 19, 32, 45, 46, 35], [0, 1, 38, 15, 16, 41, 30, 31, 44, 57, 58, 47],
                [24, 25, 2, 39, 40, 5, 54, 55, 8, 21, 22, 11]]
liu_qin = ['父母', '兄弟', '子孙', '妻财', '官鬼']
yao_wei = ['六爻', '五爻', '四爻', '三爻', '二爻', '初爻']


# GID的['60六亲']为依据，不需传入整个dict
class GuaImageEditor:
    def __init__(self, GuaImageDict=None):
        self.GuaImage = GuaImageDict
        self.lq_value_60 = GuaImageDict['60六亲']
        self.Family = self.family_init(GuaImageDict['60六亲'][0])  # 记载了12宫，数值范围是0-59，包含地支，六亲信息
        self.self_other_init()

    @staticmethod
    def family_init(Num):
        for lst in Liuqin_Num60:
            if Num in lst:
                return lst
        else:
            print('表格有误，“60六亲”的第一个数值不在0-59！')
            return []

    def self_other_init(self):
        for value, Num in zip(self.GuaImage['世应'], self.lq_value_60):
            if value == '世':
                self.self_num = Num
            elif value == '应':
                self.other_num = Num

    def xiangchong(self, num):
        num = num % 12  # num >= 6,num <= 3 ,prevent 12 happen,all convert to 0
        return self.Family[num - 6 if num >= 6 else num + 6]

    def xianghe(self, num):
        num = num % 12
        return self.Family[3 - num if num <= 3 else 15 - num]

    def edit_process(self):
        self.GuaImage.update(self.六亲世应_冲合地())
        return self.GuaImage

    def 六亲世应_冲合地(self):
        # 先遍历表格。key:爻序，60六亲，【定位】冲六神，合六神；想好怎么用了吗
        length = len(self.lq_value_60)
        res_dic = {
            '父母地': [], '兄弟地': [], '子孙地': [], '妻财地': [], '官鬼地': [], '世爻地': [], '应爻地': [],
            '冲六亲': [], '合六亲': [], '冲爻位': [], '合爻位': [],
            '冲合世': [''] * length, '冲合应': [''] * length,
        }
        main_lq_lst = self.lq_value_60[:6]
        for Num in self.lq_value_60:  # 填完所有层
            for key_di, value in lq_60_di[Num].items():  # dict，一口气填充5个key，用append填一层
                res_dic[key_di].append(value)

            chong_Num, he_Num = self.xiangchong(Num), self.xianghe(Num)
            chong_lq = f'冲{liu_qin[chong_Num // 12]}' if chong_Num in main_lq_lst else ''
            he_lq = f'合{liu_qin[he_Num // 12]}' if he_Num in main_lq_lst else ''
            # change:'self.lq_value_60' replace to 'main_lq_lst',cause:本位爻 不能冲合 变爻
            res_dic['冲六亲'].append(chong_lq)
            res_dic['合六亲'].append(he_lq)

            condition1, condition2 = chong_Num in main_lq_lst, he_Num in main_lq_lst
            chong_yw = f'冲{yao_wei[main_lq_lst.index(chong_Num)]}' if condition1 else ''
            he_yw = f'合{yao_wei[main_lq_lst.index(he_Num)]}' if condition2 else ''
            res_dic['冲爻位'].append(chong_yw)
            res_dic['合爻位'].append(he_yw)

        self_lq, other_lq = liu_qin[self.self_num // 12], liu_qin[self.other_num // 12]
        self_yw, other_yw = yao_wei[main_lq_lst.index(self.self_num)], yao_wei[main_lq_lst.index(self.other_num)]
        res_dic['世爻地'] = [v.replace(self_lq, '世爻') for v in res_dic[f'{self_lq}地']]
        res_dic['应爻地'] = [v.replace(other_lq, '应爻') for v in res_dic[f'{other_lq}地']]
        for i,(chong_value,he_value) in enumerate(zip(res_dic['冲爻位'],res_dic['合爻位'])):
            if self_yw in chong_value:
                res_dic['冲合世'][i] = '冲世'
            elif self_yw in he_value:
                res_dic['冲合世'][i] = '合世'
            if other_yw in chong_value:
                res_dic['冲合应'][i] = '冲应'
            elif other_yw in he_value:
                res_dic['冲合应'][i] = '合应'
        # solution:全部设置空，冲二爻，合二爻，修正对应的列表

        return res_dic
